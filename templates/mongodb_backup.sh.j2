#!/bin/bash

set -e

export PATH="$PATH:/usr/local/bin"

usage()
{
cat << EOF
usage: $0 options

This script dumps the current mongo database, tars it, then sends it to an Amazon S3 bucket.

OPTIONS:
   -h      Show this message
   -u      Mongodb user
   -p      Mongodb password
   -k      AWS Access Key
   -s      AWS Secret Key
   -r      Amazon S3 region
   -b      Amazon S3 bucket name
   -x      S3 key prefix
   -a      Days of data to keep
EOF
}

MONGODB_USER=
MONGODB_PASSWORD=
AWS_ACCESS_KEY=
AWS_SECRET_KEY=
S3_REGION=
S3_BUCKET=
S3_KEY_PREFIX=
BACKUP_DAYS_CNT=

while getopts “ht:u:p:k:s:r:b:x:a:q” OPTION
do
  case $OPTION in
    h)
      usage
      exit 1
      ;;
    u)
      MONGODB_USER=$OPTARG
      ;;
    p)
      MONGODB_PASSWORD=$OPTARG
      ;;
    k)
      AWS_ACCESS_KEY=$OPTARG
      ;;
    s)
      AWS_SECRET_KEY=$OPTARG
      ;;
    r)
      S3_REGION=$OPTARG
      ;;
    b)
      S3_BUCKET=$OPTARG
      ;;
    x)
      S3_KEY_PREFIX=$OPTARG
      ;;
    a)
      BACKUP_DAYS_CNT=$OPTARG
      ;;
    ?)
      usage
      exit
    ;;
  esac
done

echo $AWS_ACCESS_KEY
echo $AWS_SECRET_KEY
echo $S3_REGION
echo $S3_BUCKET
echo $S3_KEY_PREFIX
echo $BACKUP_DAYS_CNT

if [ -z $AWS_ACCESS_KEY ] || [ -z $AWS_SECRET_KEY ] || [ -z $S3_REGION ] || [ -z $S3_BUCKET ] || [ -z $S3_KEY_PREFIX ] || [ -z $BACKUP_DAYS_CNT ]
then
  usage
  exit 1
fi

# Get the directory the script is being run from
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
echo $DIR
# Store the current date in YYYY-mm-DD-HHMMSS
DATE=$(date -u "+%F-%H%M%S")
FILE_NAME="backup-$DATE"
ARCHIVE_NAME="$FILE_NAME.tar.gz"

PASSWORD_PROTECTED=[ $MONGODB_USER ] && [ $MONGODB_PASSWORD ]

# Dump the database
if [ $PASSWORD_PROTECTED = true ]; then
  mongodump -username "$MONGODB_USER" -password "$MONGODB_PASSWORD" --out $DIR/backup/$FILE_NAME
else
  mongodump --out $DIR/backup/$FILE_NAME
fi


# Tar Gzip the file
tar -C $DIR/backup/ -zcvf $DIR/backup/$ARCHIVE_NAME $FILE_NAME/

# Remove the backup directory
rm -r $DIR/backup/$FILE_NAME

# Send the file to the backup drive or S3

python mongodb_backup.py -k $AWS_ACCESS_KEY -s $AWS_SECRET_KEY -r $S3_REGION -b $S3_BUCKET -f $DIR/backup/$ARCHIVE_NAME -p $S3_KEY_PREFIX -c $BACKUP_DAYS_CNT

rm -f $DIR/backup/$ARCHIVE_NAME
